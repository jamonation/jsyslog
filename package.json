{
  "name": "jsyslog",
  "version": "0.0.4",
  "description": "node based syslog daemon",
  "main": "lib/jsyslog.js",
  "bin": {
    "jsyslog": "bin/jsyslog.js"
  },
  "preferGlobal": true,
  "dependencies": {
    "bluebird": "^2.9.34",
    "bunyan": "^1.4.0",
    "istanbul": "^0.3.21",
    "strftime": "^0.9.2",
    "unix-dgram": "^0.2.1",
    "winston": "^1.0.1"
  },
  "devDependencies": {
    "coveralls": "^2.11.4",
    "istanbul": "^0.3.21",
    "tape": "^4.0.1"
  },
  "optionalDependencies": {
    "bunyan": "^1.4.0",
    "winston": "^1.0.1"
  },
  "scripts": {
    "test": "./node_modules/.bin/istanbul cover --include-all-sources ./node_modules/.bin/tape tests/**/*.js"
  },
  "repository": {
    "type": "git",
    "url": "https://gitlab.com/jamonation/jsyslog.git"
  },
  "keywords": [
    "syslog",
    "syslogd",
    "logging",
    "rfc3164",
    "rfc5424"
  ],
  "author": {
    "name": "Jamon Camisso"
  },
  "license": "WTFPL",
  "gitHead": "8677929aad97a3378c5132c3d84dd55bbbfdc59e",
  "_id": "jsyslog@0.0.4",
  "_shasum": "a1fcf438ecb11738143d6ebc17a57c5a2b6349b0",
  "_from": "jsyslog@",
  "_npmVersion": "2.1.12",
  "_nodeVersion": "0.10.31",
  "_npmUser": {
    "name": "jamonation",
    "email": "jamonation+npmjs@gmail.com"
  },
  "dist": {
    "shasum": "2f6f17dc70b0704250a153e56c4e683950db3bc5",
    "tarball": "http://registry.npmjs.org/jsyslog/-/jsyslog-0.0.2.tgz"
  },
  "maintainers": [
    {
      "name": "jamonation",
      "email": "jamonation+npmjs@gmail.com"
    }
  ],
  "directories": {},
  "_resolved": "https://registry.npmjs.org/jsyslog/-/jsyslog-0.0.2.tgz",
  "readme": "![jsyslog logo](http://jamon.ca/jsyslog.png)\n\njsyslog is a javascript based syslog daemon that aims to be a complete implementation of RFC 3164, and RFC 5424.\n\nA number of features are planned, like a plugin system for logging to endpoints such as Elasticsearch, Fluentd, Heka, Logstash or other syslog daemons.\n\n## why?\n\nThere is no RFC compliant syslog daemon in the nodejs ecosystem. Moreover, tools like rsyslog and syslog-ng are somewhat exacting in terms of their setup.\n\njsyslog intends to make it easy for anyone with a passing knowledge of javascript or json to be able setup, use and extend with a minimum amount of fuss.\n\n## getting started\n\nA few things are required to use jsyslog on Linux and OSX systems (untested on Windows and *BSD as of this writing):\n\n1. node and npm binaries\n\n2. root access (if you want to run as an rsyslog/syslogd/syslog-ng replacement)\n\n3. highly recommend pm2 process manager\n\nTo get jsyslog setup, use npm or clone this repository.\n\ncd to node_modules or wherever you cloned jsyslog\n\nEdit `config/config.js` to your liking.\n\nAs root run `pm2 start jsyslog` or `node jsyslog`\n\n## TODO:\n\n1. Make npm -g install work\n\n2. Use process fork to run standalone and as an unprivileged user\n\n3. Build plugin system for logging endpoints like elasticsearch, fluentd, heka, logstash, rsyslog etc. etc.\n",
  "readmeFilename": "README.md"
}
